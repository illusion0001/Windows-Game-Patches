#pragma once

// https://github.com/emoose/NieRAutomata-LodMod/blob/fc7316bd3309ab38eb2a4016a96f9282d285fb90/Automata-LodMod/SDKEnums.h

#include <stdint.h>

struct FLAG_CAT
{
    const char* cat_name;
    uint32_t* cat_list;
    uintptr_t unk;
};

enum FLAG_CATEGORY
{
    DBG = 0,
    DBSTP = 1,
    DBDISP = 2,
    DBGRAPHIC = 3,
    STA = 4,
    STOP = 5,
    GRAPHIC = 6,
    DISP = 7,
    GAME = 8,
    MAX,
};

// enum names come from RTTI inside steam ver
// value names come from 2017 debug ver
// (2021 seems to make use of some STA/GAME flags which aren't included in 2017 :()

// my goodness, this is really bad
// but without usage of std::map/stdlib, this is the best i can do
#define xe(n, e) n##_##e,
#define x(n, e) xe(n, e)
#define xx(n, e) xe(n, e)
#define dbg_flag_x(n) \
    x(n, CAMERA_MODE) \
    x(n,CAM_MODE_OBJ) \
    x(n,CAM_MODE_SCR) \
    x(n,TRAILER_CAPTURE_MODE) \
    x(n,DBG_EFFECT_SCRCAPMODE) \
    x(n,DBG_CAM_INFO_DISP) \
    x(n,DBG_DBCAM_INFO_DISP) \
    x(n,TOOL_MODE) \
    x(n,DBG_ESP_TOOL) \
    x(n,SOUND_TOOL) \
    x(n,DBG_GA_TOOL) \
    x(n,DBG_WINDOWCTL_NO_ABTN) \
    x(n,DBG_DBGSTRING_NODISP) \
    x(n,DBG_ERASE_SYSTEM_PAGE) \
    x(n,DBG_ERASE_MEMORY_MAP) \
    x(n,STEP_MODE) \
    x(n,STEP_ADVANCE) \
    x(n,DBG_SCREEN_CAPTURE) \
    x(n,DBG_DEBUG_ROOM_JUMP) \
    x(n,DEBUG_MENU_BTN_NO_R1) \
    x(n,DBG_RELOAD_ON) \
    x(n,PROCESS_BAR_DISP) \
    x(n,PROCESS_BAR_NO_AVE) \
    x(n,DBG_NOUSE_MENU_BAR) \
    x(n,DBG_ESP_DEBUG_DISP) \
    x(n,DBG_ESP_SCREEN_NODISP) \
    x(n,DBG_ESP_MULTI_THREAD_OFF) \
    x(n,DBG_ESP_T_MULTI_THREAD_OFF) \
    x(n,DBG_PL_LOW_CUBE_MAP_CHECK) \
    x(n,DBG_MOT_CAM_OFF) \
    x(n,DBG_ESP_I_MULTI_THREAD_OFF) \
    x(n,DBG_ESP_TRANS_CREATE_ORDER_OFF) \
    x(n,DBG_CAM_VIEW_UNDER_COL_CK) \
    x(n,DBG_CAM_ADJUST_OFF) \
    x(n,DBG_STRONG_ATK_SP) \
    x(n,DBG_IN_CUBEMAP_CAPTURE_MODE) \
    x(n,DBG_PAD_REPLACE) \
    x(n,DBG_PAD_KEYBOARD) \
    x(n,DBG_BEHAVIOR_SINGLE) \
    x(n,DBG_OBJ_TRANS_SINGLE) \
    xx(n,unk_40) \
    x(n,DBG_DVD_TIME) \
    x(n,DBG_DVD_FAST_STARTUP) \
    x(n,DBG_DVD_TIME_RECORD) \
    x(n,DBG_HAP_DEVELOPMENT_MODE) \
    x(n,DBG_HAP_TEST) \
    x(n,DBG_HAP_TOOL_USE_MEMO) \
    x(n,DBG_PL_WEP_LV_CHG) \
    x(n,DBG_PLAYER_NO_DAMAGE) \
    x(n,DBG_PLAYER_INVINCIBLE) \
    x(n,DBG_PL_SLOW_MUGEN) \
    x(n,DBG_PL_GAUGE_MUGEN) \
    x(n,DBG_PL_FAST_MOVE) \
    x(n,DBG_PL_HP_1) \
    x(n,DBG_PL_DIE) \
    x(n,DBG_PL_MUGEN_JUMP) \
    x(n,DBG_PL_LV_FIX) \
    x(n,DBG_PL_LV_CHG) \
    x(n,DBG_PL_9S_HACKING) \
    x(n,DBG_VARIABLE_FRAME_DISABLE) \
    x(n,DBG_SLOW_RATE_30) \
    x(n,DBG_COUTINUOUS_COMBO) \
    x(n,DBG_PL_SP_WAIT_IGNORE) \
    x(n,DBG_PL_CAM_CHECK_HIT_ON) \
    x(n,DBG_EM_NO_DAMAGE) \
    x(n,DBG_EM_WAIT_MODE) \
    x(n,DBG_EM_INSTANT_DEATH) \
    x(n,DBG_EM_SELECT) \
    x(n,DBG_EM_STUN_MAX) \
    x(n,DBG_EM_MANY_DAMAGE) \
    x(n,DBG_EM_NO_STUN) \
    x(n,DBG_EM_NO_ATTACK) \
    x(n,DBG_EM_BRAND) \
    x(n,DBG_EM_CONTROLHACK) \
    x(n,DBG_EM_TEAM) \
    x(n,DBG_EM_LEVELUP_ESP) \
    x(n,DBG_EM_HACKING_REACTION_TEST) \
    x(n,DBG_EM_NO_CHANGE_REACTION) \
    x(n,DBG_NPC_SEDACTIVE) \
    x(n,DBG_PL_DAMAGE_TEST) \
    x(n,DBG_TOOL_SLOW_MODE) \
    x(n,DBG_SCR_SHOT_TOOL) \
    x(n,DBG_SCR_SHOT_CONSTANT) \
    x(n,DBG_SCR_SHOT_ESP_LIGHT) \
    x(n,DBG_SCR_SHOT_DISTANTVIEW) \
    x(n,DBG_STOP_TEX_READ) \
    x(n,DBG_NO_CAMERA_MOUSE) \
    xx(n,unk_87) \
    x(n,DBG_EM_EMP_TEST) \
    x(n,DBG_GI_TOOL) \
    x(n,DBG_PL_FRONT_CAPSULE_CK) \
    x(n,DBG_EVENT_TEST_DRAW) \
    x(n,DBG_SCENE_CAPTURE) \
    x(n,DBG_SCENE_CAPTURE_READY) \
    x(n,DBG_PL_WEP_LV_MAX) \
    x(n,DBG_PERMIT_STEP_MODE_USE_WND) \
    x(n,DBG_ONISHI) \
    x(n,DBG_WAGATSUMA) \
    x(n,DBG_WAGATSUMA_FLIGHT_UNIT) \
    x(n,DBG_CAM_MODE_028) \
    x(n,DBG_BUDDY_OFF) \
    x(n,DBG_HACKING_ACCELERATION) \
    x(n,DBG_ITEM_TEST) \
    x(n,DBG_EM_DELAYED_VIRUS_TEST) \
    x(n,DBG_WAGATSUMA_JUMPHEIGHT_TEST) \
    x(n,DBG_WAGATSUMA_ONLYSEQ_2) \
    x(n,DBG_WAGATSUMA_FLIGHTMODE_SPEED) \
    x(n,DBG_VIEW_MOT) \
    x(n,DBG_2B_BREAK) \
    x(n,DBG_ESPRAYCAST_IGNORE) \
    x(n,DBG_YASUI_HACK_AUTO_SHOOT) \
    x(n,DBG_OKABE) \
    x(n,DBG_RYOUICHI) \
    x(n,DBG_CAPTURE_WITH_UI) \
    x(n,DBG_MOUSEMODE_OFF) \
    x(n,DBG_KEYBOARDPAD_ON) \
    x(n,DBG_FILE_READ_LOG) \
    x(n,DBG_PLAYGO_TEST) \
    x(n,DBG_AUTO_JUMP_TEST_MODE) \
    x(n,DBG_HONDA) \
    x(n,DBG_YASUI_MINIMAP) \
    x(n,DBG_UI_NO_MODE_CHANGE) \
    x(n,DBG_HACK_PASSIVE) \
    x(n,DBG_UI_FILTER_BREAK) \
    x(n,DBG_AUTO_PLAY) \
    x(n,DBG_AUTO_PLAY_LOCAL) \
    x(n,DBG_STP_UPDATE_PAD) \
    x(n,DBG_UI_FILTER_EMP) \
    x(n,DBG_NOUSESPU_ESPJOBMOVESPU) \
    x(n,DBG_NOUSESPU_ESPJOBPRETRANSSPU) \
    x(n,DBG_NOUSESPU_MODELUPDATEPARTS_MTX) \
    x(n,DBG_NOUSESPU_MODELTRANS) \
    x(n,DBG_GPUBULLET_BITONICSORTCPU) \
    x(n,DBG_WASADADEBUG_0) \
    x(n,DBG_WASADADEBUG_1) \
    x(n,DBG_WASADADEBUG_2) \
    x(n,DBG_EXPERRIENTSHADER_CHANGE) \
    x(n,DBG_WASADADEBUG_4) \
    x(n,DBG_WASADADEBUG_5) \
    x(n,DBG_WASADADEBUG_6) \
    x(n,DBG_WASADADEBUG_7) \
    xx(n,unk_141) \
    x(n,DBG_PL_HAIR_COLOR_TEST) \
    x(n,DBG_EFFECT_GPUBULLET_NO_SORT) \
    x(n,DBG_KAMAKAMI) \
    x(n,DBG_UI_DETAIL_LOG) \
    x(n,DBG_UI_NAMEENTRY) \
    x(n,DBG_UI_WIREFRAME) \
    x(n,DBG_UI_MASK_NODISP) \
    x(n,DBG_UI_GAUSS_NODISP) \
    x(n,DBG_UI_DISP_EXPGAUGE) \
    x(n,DBG_UI_PASSIVE_SKILL_ON) \
    x(n,DBG_UI_FISHLIST_COMPLETE) \
    x(n,DBG_UI_EMLIST_COMPLETE) \
    x(n,DBG_UI_TUTORIAL_OPEN) \
    x(n,DBG_UI_NOVEL_OPEN) \
    x(n,DBG_UI_VIEW_HEX) \
    x(n,DBG_UI_PADMODE_FORCE) \
    x(n,DBG_UI_SINGLE_UPDATE) \
    x(n,DBG_UI_SINGLE_TRANS) \
    x(n,DBG_STAFFROLL_DUMMY_DOWNLOAD) \
    x(n,DBG_TIME_CRUNCH) \
    x(n,DBG_DECORPSE_BODY) \
    x(n,DBG_9SCTRL_MODE_B) \
    x(n,DBG_UI_LOG) \
    x(n,DBG_3DMAP_VISIBLE) \
    x(n,DBG_AFTERCLEARANCE_DBMENU_ENABLE) \
    x(n,DBG_ADD_PLAYTIME_15MINUTES) \
    xx(n,unk_168) \
    x(n,DBG_PL_AUTO_PLAY) \
    x(n,DBG_PL_SHOT_PLANE_OFF) \
    x(n,DBG_PL_SHOT_PLANE_DISP) \
    x(n,DBG_PL_SHOT_PLANE_SCR_B) \
    x(n,DBG_PL_SHOT_PLANE_BATTLE_B) \
    x(n,DBG_EM_HP_DISP) \
    x(n,DBG_PL_HACKING_TEST) \
    xx(n,unk_176) \
    x(n,DBG_EVENTSKIP_FORCE) \
    x(n,DBG_PLAYRECORD_OPEN) \
    x(n,DBG_ESP_CHECK_MODE) \
    x(n,DBG_NOT_LIMIT_CORPSE_NUMBER) \
    x(n,DBG_NO_TIME_LIMIT_CHIP_EFFECT) \
    x(n,DBG_DISPLAY_CORPSE_PARAMETER) \
    x(n,DBG_SUPPLY_CHECK_ON) \
    x(n,DBG_TIME_CRUNCH_SUPPLY) \
    x(n,DBG_HAP_LEVEL_BIND) \
    x(n,DBG_SUPPORT_MSG_TW) \
    x(n,DBG_SUPPORT_MSG_KR) \
    x(n,DBG_NETWORK_MENU_ON) \
    x(n,DBG_CLEARFLAG_ON) \
    x(n,DBG_FISH_TEST) \
    x(n,DBG_CLEAR_COLOR_CUSTOM) \
    x(n,DBG_SOUND_WWISE_COMM) \
    x(n,DBG_SOUND_MUTE_MASTER) \
    x(n,DBG_SOUND_MUTE_SE) \
    x(n,DBG_SOUND_MUTE_BGM) \
    x(n,DBG_SOUND_MUTE_VOICE) \
    x(n,DBG_SOUND_MUTE_ENV) \
    x(n,DBG_SOUND_DISABLE_AREA) \
    x(n,DBG_SOUND_DISABLE_REFLECTION) \
    x(n,DBG_SOUND_OFF_SE_CULL) \
    x(n,DBG_SOUND_NON_VOLATILE) \
    xx(n,unk_202) \
    xx(n,unk_203) \
    xx(n,unk_204) \
    xx(n,unk_205) \
    xx(n,unk_206) \
    x(n,DBG_UNSTABLE_SLOW_RATE) \
    x(n,DBG_EFFECT_AUTODIECHECK) \
    x(n,DBG_EFFECT_HITEFFECT_AUTO) \
    x(n,DBG_DLC00_MOUNT) \
    x(n,DBG_DLC01_MOUNT) \
    x(n,DBG_DLC02_MOUNT) \
    x(n,DBG_DLC03_MOUNT) \
    x(n,DBG_DLC04_MOUNT) \
    x(n,DBG_DLC05_MOUNT) \
    x(n,DBG_DLC06_MOUNT) \
    x(n,DBG_DLC07_MOUNT) \
    x(n,DBG_DLC08_MOUNT) \
    x(n,DBG_DLC09_MOUNT) \
    x(n,DBG_DLC10_MOUNT) \
    x(n,DBG_DLC11_MOUNT) \
    x(n,DBG_DLC12_MOUNT) \
    xx(n,unk_223) \
    x(n,DBG_LOW_MAP_DISABLE) \
    x(n,DBG_MANUAL_CULLING_DISABLE) \
    x(n,DB_LOW_MAP_ONLY) \
    xx(n,unk_227) \
    x(n,DBG_USE_QA_LEADERBORAD) \
    x(n,DBG_SET_UPLOAD_7DAY_IN_AVANCE) \
    x(n,DBG_SET_UPLOAD_60DAY_IN_AVANCE) \
    x(n,DBG_2B_SETUP_1MIN) \
    x(n,DBG_FASTTRAVEL_TEST) \
    x(n,DBG_SET_ALL_WEAPON) \
    x(n,DBG_SET_ALL_ACTIVESKILL) \
    x(n,DBG_PASSIVESKILL_TEST) \
    x(n,DBG_FASTTRAVEL_OLD) \
    x(n,DBG_MAILBOX_TEST) \
    x(n,DBG_QUEST_TEST) \
    x(n,DBG_TITLE_TEST) \
    x(n,DBG_BGM_HOLY_EFX) \
    x(n,DBG_BGM_CHORUS_EFX) \
    x(n,DBG_BGM_PITCH_SHIFT_P) \
    x(n,DBG_BGM_PITCH_SHIFT_M) \
    x(n,DBG_BGM_TIME_STRETCH_SLOW) \
    x(n,DBG_BGM_8BIT_TEST) \
    x(n,DBG_BGM_RECORD_EFX) \
    x(n,DBG_BGM_TRY_VOCAL_ON) \
    x(n,DBG_BGM_POD_TEMPO_SCALING) \
    xx(n,unk_249) \
    xx(n,unk_250) \
    xx(n,unk_251) \
    xx(n,unk_252) \
    xx(n,unk_253) \
    xx(n,unk_254) \
    xx(n,unk_255)

enum DBG_FLAG
{
    dbg_flag_x(dbg_flag)
};

#define dbg_step_x(n) \
    x(n,DBSTP_OBJ) \
    x(n,DBSTP_PL) \
    x(n,DBSTP_EM) \
    x(n,DBSTP_ETC) \
    x(n,DBSTP_ESP) \
    x(n,DBSTP_SCR) \
    x(n,DBSTP_UI) \
    x(n,DBSTP_FILTER) \
    x(n,DBSTP_SHADOW) \
    x(n,DBSTP_SUBPL) \
    x(n,DBSTP_PAD_VIB) \
    x(n,DBSTP_LAYOUT_SET) \
    xx(n,unk_12) \
    xx(n,unk_13) \
    xx(n,unk_14) \
    xx(n,unk_15) \
    x(n,DBSTP_ATDMHIT) \
    x(n,DBSTP_OBJHIT) \
    x(n,DBSTP_SCRHIT) \
    x(n,DBSTP_SCENARIO) \
    x(n,DBSTP_EVENT) \
    x(n,DBSTP_CLOTH_CALC_OFF) \
    x(n,DBSTP_CAMERA) \
    x(n,DBSTP_LIGHT) \
    x(n,DBSTP_SCE_AT) \
    x(n,DBSTP_HAP_DISP) \
    x(n,DBSTP_IK) \
    x(n,DBSTP_GPU_BULLET) \
    xx(n,unk_28) \
    xx(n,unk_29) \
    xx(n,unk_30) \
    xx(n,unk_31) \
    x(n,DBSTP_ALLHIT) \
    x(n,DBSTP_ALL_MODEL) \
    x(n,DBSTP_SCENE) \
    xx(n,unk_35) \
    xx(n,unk_36) \
    x(n,DBSTP_ESPCALL) \
    xx(n,unk_38) \
    x(n,DBSTP_KEYBORED_SHORTCUT) \
    xx(n,unk_40) \
    xx(n,unk_41) \
    xx(n,unk_42) \
    xx(n,unk_43) \
    xx(n,unk_44) \
    xx(n,unk_45) \
    xx(n,unk_46) \
    xx(n,unk_47) \
    x(n,DBSTP_MODEL_WIND_RECEIVE) \
    x(n,DBSTP_FOOT_IK) \
    x(n,DBSTP_DEBUG_LOG) \
    xx(n,unk_51) \
    x(n,DBSTP_WND_WINDOW_SYSTEM) \
    x(n,DBSTP_ANIM) \
    x(n,DBSTP_UPDATE_VFCUL) \
    xx(n,unk_55) \
    x(n,DBSTP_STEP_MODE) \
    x(n,DBSTP_CALC_ROUTE) \
    x(n,DBSTP_HAP_SCENARIO) \
    x(n,DBSTP_HAP_LAZY_MOUNT) \
    xx(n,unk_60) \
    xx(n,unk_61) \
    xx(n,unk_62) \
    xx(n,unk_63) \
    x(n,DBSTP_POD_SUSPEND) \
    xx(n,unk_65) \
    xx(n,unk_66) \
    xx(n,unk_67) \
    xx(n,unk_68) \
    xx(n,unk_69) \
    xx(n,unk_70) \
    xx(n,unk_71) \
    xx(n,unk_72) \
    xx(n,unk_73) \
    xx(n,unk_74) \
    xx(n,unk_75) \
    xx(n,unk_76) \
    xx(n,unk_77) \
    xx(n,unk_78) \
    xx(n,unk_79) \
    x(n,DBSTP_MAP_UPDATE) \
    x(n,DBSTP_MODEL_TREE_OFF) \
    xx(n,unk_82) \
    xx(n,unk_83) \
    xx(n,unk_84) \
    xx(n,unk_85) \
    xx(n,unk_86) \
    xx(n,unk_87) \
    xx(n,unk_88) \
    xx(n,unk_89) \
    xx(n,unk_90) \
    xx(n,unk_91) \
    xx(n,unk_92) \
    xx(n,unk_93) \
    xx(n,unk_94) \
    xx(n,unk_95) \
    xx(n,unk_96) \
    xx(n,unk_97) \
    xx(n,unk_98) \
    xx(n,unk_99) \
    xx(n,unk_100) \
    xx(n,unk_101) \
    xx(n,unk_102) \
    xx(n,unk_103) \
    xx(n,unk_104) \
    xx(n,unk_105) \
    xx(n,unk_106) \
    xx(n,unk_107) \
    xx(n,unk_108) \
    xx(n,unk_109) \
    xx(n,unk_110) \
    xx(n,unk_111) \
    xx(n,unk_112) \
    xx(n,unk_113) \
    xx(n,unk_114) \
    xx(n,unk_115) \
    xx(n,unk_116) \
    xx(n,unk_117) \
    xx(n,unk_118) \
    xx(n,unk_119) \
    xx(n,unk_120) \
    xx(n,unk_121) \
    xx(n,unk_122) \
    xx(n,unk_123) \
    xx(n,unk_124) \
    xx(n,unk_125) \
    xx(n,unk_126) \
    xx(n,unk_127)

enum DBSTP_FLAG
{
    dbg_step_x(dbg_step)
};

#define dbgdisp_flag_x(n) \
    x(n,DBDISP_OBJ_NO_DISP) \
    x(n,DBDISP_PL_NO_DISP) \
    x(n,DBDISP_EM_NO_DISP) \
    x(n,DBDISP_ETCOBJ_NO_DISP) \
    x(n,DBDISP_ESP_NO_DISP) \
    x(n,DBDISP_SCR_NO_DISP) \
    x(n,DBDISP_UI_NO_DISP) \
    x(n,DBDISP_FILTER_NO_DISP) \
    x(n,DBDISP_SHADOW_NO_DISP) \
    x(n,DBDISP_DBPRIM_NO_DISP) \
    x(n,DBDISP_LIGHT_NO_DISP) \
    x(n,DBDISP_WP_NO_DISP) \
    x(n,DBDISP_BGOBJ_NO_DISP) \
    x(n,DBDISP_BAOBJ_NO_DISP) \
    x(n,DBDISP_BHOBJ_NO_DISP) \
    x(n,DBDISP_SCOBJ_NO_DISP) \
    x(n,DBDISP_ATDM_HIT_DISP) \
    x(n,DBDISP_OBJ_HIT_DISP) \
    x(n,DBDISP_SCR_HIT_DISP) \
    x(n,DBDISP_SCE_AT_DISP) \
    x(n,DBDISP_FILTER_ATDISP) \
    x(n,DBDISP_CUBEMAP_ATDISP) \
    x(n,DBDISP_INSTANCINGREGION) \
    x(n,DBDISP_DRAW_TEST) \
    x(n,DBDISP_MOTION_BLUR) \
    x(n,DBDISP_BEHAVIOR_INFO) \
    x(n,DBDISP_GA_ATARI_DISP) \
    x(n,DBDISP_PHASEINFO) \
    x(n,DBDISP_GAMEFLAG) \
    x(n,DBDISP_CAMERA) \
    x(n,DBDISP_CHARAPROXY) \
    x(n,DBDISP_BEHAVIOR_SCR_HIT_DISP) \
    x(n,DBDISP_CAM_ALPHA_VOLUME) \
    x(n,DBDISP_NO_DISP_HAP_LAYOUT) \
    x(n,DBDISP_1BM_OFF) \
    x(n,DBDISP_LOD_BOUNDING_VOULME) \
    x(n,DBDISP_BOUNDING_VOULME) \
    x(n,DBDISP_DIST_DISP) \
    x(n,DBDISP_WET_CHECK) \
    x(n,DBDISP_NO_DISP_PL_DM) \
    x(n,DBDISP_NO_DISP_EM_DM) \
    x(n,DBDISP_NO_DISP_PL_AT) \
    x(n,DBDISP_NO_DISP_EM_AT) \
    x(n,DBDISP_SHADE_COL_DISP) \
    x(n,DBDISP_BLEND_CHECK) \
    x(n,DBDISP_ANIMATIONNAME_DISP) \
    x(n,DBGDISP_IK) \
    x(n,DBGDISP_ROUTE) \
    x(n,DBDISP_EM_CAM_DIS) \
    x(n,DBDISP_PL_SEQ_FLAG_DISP) \
    x(n,DBDISP_ETC_CAM_DIS) \
    x(n,DBDISP_OBJ_ID) \
    x(n,DBDISP_SHADER_SETTING_INFO) \
    x(n,DBDISP_SHADER_SETTING_LIST) \
    x(n,DBDISP_EM_BEZIERCURVE) \
    x(n,DBDISP_SHADER_SETTING_MODEL) \
    x(n,DBDISP_FRAME_RATE_EMERGENCY) \
    x(n,DBDISP_FISHING_AREA) \
    x(n,DBDISP_CLOTH) \
    x(n,DBDISP_LIGHT) \
    x(n,DBDISP_MAKER) \
    x(n,DBDISP_PARTSSPRING) \
    x(n,DBDISP_PARTS_INFO) \
    x(n,DBDISP_PARTS_INFO_SPECIAL) \
    x(n,DBDISP_POLYGON_OCCLUDER) \
    x(n,DBDISP_NO_DRAW_ZMAP) \
    x(n,DBDISP_DOF_OFF) \
    x(n,DBDISP_FOG_NO_DISP) \
    x(n,DBDISP_SHADOW_MODEL_DISP) \
    x(n,DBDISP_SSLB_OFF) \
    x(n,DBDISP_SSAO_OFF) \
    x(n,DBDISP_AMBIENT_OFF) \
    x(n,DBDISP_MEM_WORK) \
    x(n,DBDISP_MEM_BUFFER) \
    x(n,DBDISP_MEM_FILE) \
    x(n,DBDISP_MEM_TEXTURE) \
    x(n,DBDISP_MEM_DEBUG) \
    x(n,DBDISP_MEM_GPURWBUFFER) \
    x(n,DBDISP_VLE_OFF) \
    x(n,DBDISP_TONEMAP_EXPOSURE) \
    x(n,DBDISP_ESP_WORK) \
    x(n,DBDISP_ESP_DEBUG) \
    x(n,DBDISP_ESP_LEDBG_EM_AUTO_REQUESTNSFLARE_DISP) \
    x(n,DBDISP_ESP_LIGHT_DISP) \
    x(n,DBDISP_ESP_LIGHT_OFF) \
    x(n,DBDISP_ESP_MODEL_OFF) \
    x(n,DBDISP_ESP_NO_MODEL_OFF) \
    x(n,DBDISP_ESP_AUTOALPHA_MAX1) \
    x(n,DBDISP_ESP_AUTOALPHA_MAX2) \
    x(n,DBDISP_ESP_HI_PRIORITY) \
    x(n,DBDISP_ESP_LENSFLARE_OFF) \
    x(n,DBDISP_ESP_DEBUG_ROOM_ONLY) \
    x(n,DBDISP_ESPSST_ATDISP) \
    x(n,DBDISP_EFFECT_SCRSET_AREA) \
    x(n,DBDISP_ESP_GPUPARTICLE_OFF) \
    x(n,DBDISP_ESP_EVENT_ONLY) \
    x(n,DBDISP_ESP_LINECHECK) \
    x(n,DBDISP_ESP_PROFILE) \
    x(n,DBDISP_ESP_2D_OFF) \
    x(n,DBDISP_ESP_SHELLPOLYGON_OFF) \
    x(n,DBDISP_ESP_RESOLVE_OFF) \
    x(n,DBDISP_ESP_BLUR_OFF) \
    x(n,DBDISP_ESP_CULL_SPHERE) \
    x(n,DBDISP_ESP_OCCLUSION_RATE) \
    x(n,DBDISP_ESP_STRIP_OFF) \
    x(n,DBDISP_ESP_AUTOSHADER_OFF) \
    x(n,DBDISP_ESP_CUSTOMSHADER_OFF) \
    x(n,DBDISP_ESP_CAPTURE_NO_DISP) \
    x(n,DBDISP_ESP_EXPOSURE_OFF) \
    x(n,DBDISP_EFFECT_EXTERNALFACTOR_DEBUG) \
    x(n,DBDISP_EFFECT_SHADERBUFFER_DDEBUG) \
    x(n,DBDISP_CAMERA_MARKER_OFF) \
    x(n,DBDISP_SOUND_AREA_SE) \
    x(n,DBDISP_SOUND_AREA_EFFECT) \
    x(n,DBDISP_SOUND_AREA_BGM) \
    x(n,DBDISP_SOUND_SE_OBJECT) \
    x(n,DBDISP_SOUND_SE_DISTANCE) \
    x(n,DBDISP_SOUND_INFO) \
    x(n,DBDISP_SOUND_ANYTIME_METER) \
    x(n,DBDISP_SOUND_STREAM_LOG) \
    xx(n,unk_120) \
    xx(n,unk_121) \
    xx(n,unk_122) \
    x(n,DBDISP_SOUND_VOICE_CALL) \
    x(n,DBDISP_SOUND_CHARA_TYPE) \
    x(n,DBDISP_SOUND_MATERIAL_GRAPH) \
    x(n,DBDISP_SOUND_MAP_HEX) \
    x(n,DBDISP_SOUND_SAMPLE_SPECTRUM) \
    x(n,DBDISP_REGIONAL_AREA_DISP) \
    x(n,DBDISP_CELESTIAL_OFF) \
    xx(n,unk_130) \
    xx(n,unk_131) \
    xx(n,unk_132) \
    xx(n,unk_133) \
    xx(n,unk_134) \
    xx(n,unk_135) \
    xx(n,unk_136) \
    xx(n,unk_137) \
    xx(n,unk_138) \
    xx(n,unk_139) \
    xx(n,unk_140) \
    xx(n,unk_141) \
    x(n,DBDISP_POINTLIGHT_OFF) \
    x(n,DBDISP_SPOTLIGHT_OFF) \
    xx(n,unk_144) \
    xx(n,unk_145) \
    xx(n,unk_146) \
    xx(n,unk_147) \
    xx(n,unk_148) \
    xx(n,unk_149) \
    xx(n,unk_150) \
    xx(n,unk_151) \
    xx(n,unk_152) \
    xx(n,unk_153) \
    xx(n,unk_154) \
    xx(n,unk_155) \
    xx(n,unk_156) \
    xx(n,unk_157) \
    xx(n,unk_158) \
    xx(n,unk_159) \
    x(n,DBDISP_UI_HUD_25D_OFF) \
    x(n,DBDISP_UI_FILTER_OFF) \
    xx(n,unk_162) \
    xx(n,unk_163) \
    xx(n,unk_164) \
    xx(n,unk_165) \
    xx(n,unk_166) \
    xx(n,unk_167) \
    xx(n,unk_168) \
    xx(n,unk_169) \
    xx(n,unk_170) \
    xx(n,unk_171) \
    xx(n,unk_172) \
    xx(n,unk_173) \
    xx(n,unk_174) \
    xx(n,unk_175) \
    xx(n,unk_176) \
    xx(n,unk_177) \
    xx(n,unk_178) \
    xx(n,unk_179) \
    xx(n,unk_180) \
    xx(n,unk_181) \
    xx(n,unk_182) \
    xx(n,unk_183) \
    xx(n,unk_184) \
    xx(n,unk_185) \
    xx(n,unk_186) \
    xx(n,unk_187) \
    xx(n,unk_188) \
    xx(n,unk_189) \
    xx(n,unk_190) \
    xx(n,unk_191) \
    x(n,DBDISP_SCR_HIT_AABB_DISP) \
    x(n,DBDISP_SCR_HIT_COL_WNO_DISP) \
    x(n,DBDISP_SCR_HIT_CURRENT_DISP) \
    x(n,DBDISP_SCR_HIT_COL_CK_DISP) \
    x(n,DBDISP_DRAW_MAP_HEX) \
    x(n,DBDISP_MANUAL_CULLING_PL) \
    x(n,DBDISP_EVENT_CAPTURE) \
    xx(n,unk_199) \
    xx(n,unk_200) \
    xx(n,unk_201) \
    xx(n,unk_202) \
    xx(n,unk_203) \
    xx(n,unk_204) \
    xx(n,unk_205) \
    xx(n,unk_206) \
    xx(n,unk_207) \
    xx(n,unk_208) \
    xx(n,unk_209) \
    xx(n,unk_210) \
    xx(n,unk_211) \
    xx(n,unk_212) \
    xx(n,unk_213) \
    xx(n,unk_214) \
    xx(n,unk_215) \
    xx(n,unk_216) \
    xx(n,unk_217) \
    xx(n,unk_218) \
    xx(n,unk_219) \
    xx(n,unk_220) \
    xx(n,unk_221) \
    xx(n,unk_222) \
    xx(n,unk_223)

enum DBDISP_FLAG
{
    dbgdisp_flag_x(dbgdisp)
};

#define dbg_DBGRAPHIC_flag_x(n) \
    x(n,DBGRAPHIC_SIMPLE_GRAPHIC) \
    x(n,DBGRAPHIC_SIMPLE_SHADER) \
    x(n,DBGRAPHIC_SHADER_PERFORMANCE) \
    x(n,DBGRAPHIC_HIGH_LOD_FIXED) \
    x(n,DBGRAPHIC_LOW_LOD_FIXED) \
    x(n,DBGRAPHIC_TEXTURE_LV_CK) \
    x(n,DBGRAPHIC_TEXTURE_DENSITY_CK) \
    x(n,DBGRAPHIC_GLARE_DISP) \
    x(n,DBGRAPHIC_SCREEN_FRAME) \
    x(n,DBGRAPHIC_NO_ANISO) \
    x(n,DBGRAPHIC_4_ANISO) \
    x(n,DBGRAPHIC_MIP_MAX_ON) \
    x(n,DBGRAPHIC_STP_SHADOWCAM_VFCUL) \
    x(n,DBGRAPHIC_EFFECTSHADER_PERFORMANCE) \
    x(n,DBGRAPHIC_CUTMODEL_STENCIL_VIEW) \
    x(n,DBGRAPHIC_LOD_DRAW) \
    x(n,DBGRAPHIC_DRAW_ALPHA_ONLY) \
    x(n,DBGRAPHIC_DRAW_PUNCH_ONLY) \
    x(n,DBGRAPHIC_DRAW_SHADOW_CAST) \
    x(n,DBGRAPHIC_DRAW_SHADOW_REC) \
    x(n,DBGRAPHIC_DRAW_BLUR_MODEL) \
    x(n,DBGRAPHIC_WIRE_FRAME_MODE) \
    xx(n,unk_22) \
    xx(n,unk_23) \
    xx(n,unk_24) \
    xx(n,unk_25) \
    xx(n,unk_26) \
    xx(n,unk_27) \
    xx(n,unk_28) \
    xx(n,unk_29) \
    xx(n,unk_30) \
    xx(n,unk_31) \
    x(n,DBGRAPHIC_NODRAW_SHADOW_CAST) \
    x(n,DBGRAPHIC_NODRAW_SHADOW_RCV) \
    x(n,DBGRAPHIC_NODRAW_MODEL_OT) \
    x(n,DBGRAPHIC_NODRAW_DEFERRED) \
    x(n,DBGRAPHIC_NODRAW_PRESORT3D) \
    x(n,DBGRAPHIC_NODRAW_RESOLVEAFTER3D) \
    x(n,DBGRAPHIC_NODRAW_SORT3D) \
    xx(n,unk_39) \
    xx(n,unk_40) \
    xx(n,unk_41) \
    xx(n,unk_42) \
    xx(n,unk_43) \
    xx(n,unk_44) \
    xx(n,unk_45) \
    xx(n,unk_46) \
    xx(n,unk_47) \
    x(n,DBGRAPHIC_NODRAW_SORT3D_2) \
    x(n,DBGRAPHIC_DEFERRED_OFF) \
    x(n,DBGRAPHIC_G_BUFFER_CLEAR) \
    x(n,DBGRAPHIC_GA_AREA_OFF) \
    x(n,DBGRAPHIC_VARIABLE_RESOLUTION_LV1) \
    x(n,DBGRAPHIC_VARIABLE_RESOLUTION_LV2) \
    x(n,DBGRAPHIC_VARIABLE_RESOLUTION_LV3) \
    xx(n,unk_55) \
    x(n,DBGRAPHIC_MODEL_QUERY_OFF) \
    x(n,DBGRAPHIC_MODEL_QUERY_KEEP) \
    xx(n,unk_58) \
    xx(n,unk_59) \
    xx(n,unk_60) \
    xx(n,unk_61) \
    xx(n,unk_62) \
    xx(n,unk_63) \
    x(n,DBGRAPHIC_SSLBMAP_DISP) \
    x(n,DBGRAPHIC_SSAOMAP_DISP) \
    x(n,DBGRAPHIC_GI_OFF) \
    x(n,DBGRAPHIC_GI_SPHERE_DISP) \
    x(n,DBGRAPHIC_GI_ONLY) \
    x(n,DBGRAPHIC_GI_KYOUSEI_UPDATE) \
    x(n,DBGRAPHIC_AIR_SCATTERING_OFF) \
    x(n,DBGRAPHIC_SAFETYNET_START) \
    xx(n,unk_72) \
    x(n,DBGRAPHIC_TEXTURE_BLUR) \
    x(n,DBGRAPHIC_HDAO_OFF) \
    x(n,DBGRAPHIC_TEXTURE_BLUR_CAM_ON) \
    x(n,DBGRAPHIC_HISTOGRAM_ON) \
    x(n,DBGRAPHIC_TEXTURE_SIZE) \
    x(n,DBGRAPHIC_NOAA_RESOLUTION) \
    x(n,DBGRAPHIC_SHADER_TEST) \
    x(n,DBGRAPHIC_ALBEDO_SHADER) \
    x(n,DBGRAPHIC_NORMAL_SHADER) \
    x(n,DBGRAPHIC_NORMAL_TEX_SHADER) \
    x(n,DBGRAPHIC_COLOR_SHADER) \
    x(n,DBGRAPHIC_COLOR_ALPHA_SHADER) \
    x(n,DBGRAPHIC_UV_SHADER) \
    x(n,DBGRAPHIC_TANGENT_SHADER) \
    x(n,DBGRAPHIC_NO_LIGHTMAP) \
    x(n,DBGRAPHIC_NO_ALBEDO) \
    x(n,DBGRAPHIC_CUBE_MAP_GLAY) \
    x(n,DBGRAPHIC_LIGHTMAP_ONLY) \
    xx(n,unk_91) \
    xx(n,unk_92) \
    xx(n,unk_93) \
    xx(n,unk_94) \
    xx(n,unk_95) \
    x(n,DBGRAPHIC_DIST_LOST_OFF) \
    x(n,DBGRAPHIC_FAR_LOST_80M) \
    x(n,DBGRAPHIC_FAR_LOST_40M) \
    x(n,DBGRAPHIC_OCCLUDER_NO_DRAW) \
    x(n,DBGRAPHIC_GA_KEEP_EXIT) \
    x(n,DBGRAPHIC_HI_RESOLUTION) \
    x(n,DBGRAPHIC_MID_RESOLUTION) \
    x(n,DBGRAPHIC_SHADOW_NEWCULL_OFF) \
    x(n,DBGRAPHIC_DISP_STOP_SCR) \
    xx(n,unk_105) \
    xx(n,unk_106) \
    xx(n,unk_107) \
    x(n,DBGRAPHIC_OBJ_SHADOW_RECEIVE_OFF) \
    x(n,DBGRAPHIC_CAM_FAR_LONG) \
    xx(n,unk_110) \
    xx(n,unk_111) \
    x(n,DBGRAPHIC_LOD_SHADER_UPDATE) \
    x(n,DBGRAPHIC_LOD_NORMAL_OFF) \
    x(n,DBGRAPHIC_LOD_CUBEMAP_OFF) \
    x(n,DBGRAPHIC_LOD_SPECULAR_OFF) \
    x(n,DBGRAPHIC_LOD_LEVEL2) \
    x(n,DBGRAPHIC_LOD_LEVEL3) \
    xx(n,unk_118) \
    xx(n,unk_119) \
    xx(n,unk_120) \
    xx(n,unk_121) \
    x(n,DBGRAPHIC_ENL_IRRADIANCE_CUBE) \
    xx(n,unk_123) \
    xx(n,unk_124) \
    xx(n,unk_125) \
    xx(n,unk_126) \
    xx(n,unk_127) \
    x(n,DBGRAPHIC_TOOL_WRITE_OFF) \
    x(n,DBGRAPHIC_MTX_NO_UPDATE) \
    x(n,DBGARPHIC_ENLIGHTEN_TEXTURE_SHOT) \
    x(n,DBGRAPHIC_FORCE_PREEFF_RESOLVE) \
    x(n,DBGRAPHIC_EFFECTSHADER_DOWNGRADE) \
    x(n,DBGRAPHIC_BUFFERCLEAR_COLORBLACK) \
    x(n,DBGRAPHIC_LIGHT_MOVE) \
    x(n,DBGRAPHIC_ENLIGHTEN_IRRADIANCE_OFF) \
    x(n,DBGARPHIC_ENLIGHTEN_SUSPEND) \
    x(n,DBGARPHIC_ENLIGHTEN_CUBE_OFF) \
    x(n,DBGARPHIC_ENLIGHTEN_IRRADIANCE_DISP) \
    x(n,DBGARPHIC_TEXTURE_SHOT_JUMPONLY) \
    x(n,DBGARPHIC_SKY_LIGHT_OFF) \
    x(n,DBGARPHIC_ENLIGHTEN_TEXTURE_SHOT2) \
    x(n,DBGARPHIC_ENLIGHTEN_CUBEVOLUME_DISP) \
    xx(n,unk_143) \
    x(n,DBGRAPHIC_UI_SIMPLE_SHADER) \
    xx(n,unk_145) \
    xx(n,unk_146) \
    xx(n,unk_147) \
    xx(n,unk_148) \
    xx(n,unk_149) \
    xx(n,unk_150) \
    xx(n,unk_151) \
    xx(n,unk_152) \
    xx(n,unk_153) \
    xx(n,unk_154) \
    xx(n,unk_155) \
    xx(n,unk_156) \
    xx(n,unk_157) \
    xx(n,unk_158) \
    xx(n,unk_159)

enum DBGRAPHIC_FLAG
{
    dbg_DBGRAPHIC_flag_x(dbg_DBGRAPHIC)

};

#define dbg_sta_flag_x(n) \
    x(n,STA_PAUSE) \
    x(n,STA_EVENT) \
    x(n,STA_SOFT_EVENT) \
    x(n,STA_EVENT_2MOVE) \
    x(n,STA_EVENT_2MOVE_DRAW_SKIP_FRAME) \
    x(n,STA_SUSPEND) \
    x(n,STA_CONTINUE) \
    x(n,STA_CREDIT_NO_PLAYABLE) \
    x(n,STA_MT_BEHEVIOR) \
    x(n,STA_BUNKER) \
    x(n,STA_QTE) \
    x(n,STA_SCRIPT_EVENT_MODE) \
    x(n,STA_EVENT_CAMERA_LINK) \
    xx(n,unk_13) \
    xx(n,unk_14) \
    xx(n,unk_15) \
    x(n,STA_HACKING_TRANSITION) \
    x(n,STA_GALLERY) \
    x(n,STA_CAPTION) \
    x(n,STA_SHOOTING) \
    x(n,STA_SUBSCREEN_DRAW_MODEL) \
    x(n,STA_PAUSE_CAPTURE) \
    x(n,STA_LOCAL_AREA_INVALID) \
    x(n,STA_P200_110_ADAM_NET_OFF) \
    x(n,STA_FAST_TRAVEL) \
    x(n,STA_FLAG_DBG_MODE) \
    x(n,STA_NOVEL) \
    x(n,STA_DIALOG_PAUSE) \
    x(n,STA_PAUSE_IMAGE_VIEW) \
    x(n,STA_CAMERA_LEAVE_PLAYER) \
    x(n,STA_ENDROLL_SHOOTING) \
    x(n,STA_MOVIE) \
    x(n,STA_THREAD_MOVE) \
    x(n,STA_PAUSE_TUTORIAL) \
    x(n,STA_SHORTCUT_ITEM) \
    x(n,STA_ENEMYSET_ROOM) \
    x(n,STA_PICTUREBOOK_PLAY) \
    x(n,STA_PAUSE_SKIPCHECK_ONLY) \
    x(n,STA_MOUSE_CURSOR_ON) \
    x(n,STA_SAVE_BAN) \
    x(n,STA_ELEV) \
    x(n,STA_NOVEL_PLAY) \
    x(n,STA_HAP_FADEOUT) \
    x(n,STA_ACDB_BAN) \
    xx(n,unk_44) \
    xx(n,unk_45) \
    xx(n,unk_46) \
    xx(n,unk_47) \
    x(n,STA_SEARCH_MODE) \
    x(n,STA_UI_BUG) \
    x(n,STA_GAMECENTER) \
    x(n,STA_EM_NO_ITEM_DORP) \
    x(n,STA_HAP_AUTO) \
    x(n,STA_HAP_AUTO_HIGH) \
    x(n,STA_DATA_DEL_EVENT) \
    x(n,STA_EM_WAIT) \
    xx(n,unk_56) \
    xx(n,unk_57) \
    x(n,STA_CIWS) \
    x(n,STA_BUNKER_ELEV) \
    x(n,STA_PL_NO_DAMAGE) \
    x(n,STA_EVENT_WINDOW_TALK) \
    x(n,STA_ACCESS_OBJ) \
    x(n,STA_KAIJU_STG) \
    xx(n,unk_64) \
    xx(n,unk_65) \
    xx(n,unk_66) \
    xx(n,unk_67) \
    xx(n,unk_68) \
    xx(n,unk_69) \
    xx(n,unk_70) \
    xx(n,unk_71) \
    xx(n,unk_72) \
    xx(n,unk_73) \
    xx(n,unk_74) \
    xx(n,unk_75) \
    xx(n,unk_76) \
    xx(n,unk_77) \
    xx(n,unk_78) \
    xx(n,unk_79) \
    xx(n,unk_80) \
    xx(n,unk_81) \
    xx(n,unk_82) \
    xx(n,unk_83) \
    xx(n,unk_84) \
    xx(n,unk_85) \
    xx(n,unk_86) \
    xx(n,unk_87) \
    xx(n,unk_88) \
    xx(n,unk_89) \
    xx(n,unk_90) \
    xx(n,unk_91) \
    xx(n,unk_92) \
    xx(n,unk_93) \
    xx(n,unk_94) \
    xx(n,unk_95) \
    xx(n,unk_96) \
    xx(n,unk_97) \
    xx(n,unk_98) \
    xx(n,unk_99) \
    xx(n,unk_100) \
    xx(n,unk_101) \
    xx(n,unk_102) \
    xx(n,unk_103) \
    xx(n,unk_104) \
    xx(n,unk_105) \
    xx(n,unk_106) \
    xx(n,unk_107) \
    xx(n,unk_108) \
    xx(n,unk_109) \
    xx(n,unk_110) \
    xx(n,unk_111) \
    xx(n,unk_112) \
    xx(n,unk_113) \
    xx(n,unk_114) \
    xx(n,unk_115) \
    xx(n,unk_116) \
    xx(n,unk_117) \
    xx(n,unk_118) \
    xx(n,unk_119) \
    xx(n,unk_120) \
    xx(n,unk_121) \
    xx(n,unk_122) \
    xx(n,unk_123) \
    xx(n,unk_124) \
    xx(n,unk_125) \
    xx(n,unk_126) \
    xx(n,unk_127)

enum STA_FLAG
{
    dbg_sta_flag_x(dbg_sta)
};

#define dbg_stp_flag_x(n) \
    x(n,STP_OBJ) \
    x(n,STP_PL) \
    x(n,STP_EM) \
    x(n,STP_ETCOBJ) \
    x(n,STP_ESP) \
    x(n,STP_SCR) \
    x(n,STP_UI) \
    x(n,STP_FILTER) \
    x(n,STP_SHADOW) \
    x(n,STP_SUBPL) \
    x(n,STP_PL_KEY) \
    x(n,STP_PL_MOVE_KEY) \
    x(n,STP_PL_ATTACK_KEY) \
    x(n,STP_IK) \
    x(n,STP_PL_CAM_KEY) \
    x(n,STP_TRIGGER) \
    x(n,STP_EVENT_SKIP) \
    x(n,STP_SCENARIO) \
    x(n,STP_GAME_UPDATE) \
    x(n,STP_EM_ATK) \
    x(n,STP_PL_NO_FACE_MOVE) \
    xx(n,unk_21) \
    xx(n,unk_22) \
    xx(n,unk_23) \
    xx(n,unk_24) \
    xx(n,unk_25) \
    xx(n,unk_26) \
    xx(n,unk_27) \
    xx(n,unk_28) \
    xx(n,unk_29) \
    xx(n,unk_30) \
    xx(n,unk_31) \
    x(n,STP_KEYBOARD_PAD) \
    x(n,STP_MOUSE_RESTRICTION) \
    x(n,STP_HAP_PL_KEY) \
    xx(n,unk_35) \
    xx(n,unk_36) \
    xx(n,unk_37) \
    xx(n,unk_38) \
    xx(n,unk_39) \
    xx(n,unk_40) \
    xx(n,unk_41) \
    xx(n,unk_42) \
    xx(n,unk_43) \
    xx(n,unk_44) \
    xx(n,unk_45) \
    xx(n,unk_46) \
    xx(n,unk_47) \
    x(n,STP_ESP_COMPUTE_UPADTE) \
    x(n,STP_ESP_LINECHECK) \
    xx(n,unk_50) \
    xx(n,unk_51) \
    xx(n,unk_52) \
    xx(n,unk_53) \
    xx(n,unk_54) \
    xx(n,unk_55) \
    xx(n,unk_56) \
    xx(n,unk_57) \
    xx(n,unk_58) \
    xx(n,unk_59) \
    xx(n,unk_60) \
    xx(n,unk_61) \
    xx(n,unk_62) \
    xx(n,unk_63) \
    xx(n,unk_64) \
    xx(n,unk_65) \
    xx(n,unk_66) \
    xx(n,unk_67) \
    xx(n,unk_68) \
    xx(n,unk_69) \
    xx(n,unk_70) \
    xx(n,unk_71) \
    xx(n,unk_72) \
    xx(n,unk_73) \
    xx(n,unk_74) \
    xx(n,unk_75) \
    xx(n,unk_76) \
    xx(n,unk_77) \
    xx(n,unk_78) \
    xx(n,unk_79) \
    xx(n,unk_80) \
    xx(n,unk_81) \
    xx(n,unk_82) \
    xx(n,unk_83) \
    xx(n,unk_84) \
    xx(n,unk_85) \
    xx(n,unk_86) \
    xx(n,unk_87) \
    xx(n,unk_88) \
    xx(n,unk_89) \
    xx(n,unk_90) \
    xx(n,unk_91) \
    xx(n,unk_92) \
    xx(n,unk_93) \
    xx(n,unk_94) \
    xx(n,unk_95) \
    xx(n,unk_96) \
    xx(n,unk_97) \
    xx(n,unk_98) \
    xx(n,unk_99) \
    xx(n,unk_100) \
    xx(n,unk_101) \
    xx(n,unk_102) \
    xx(n,unk_103) \
    xx(n,unk_104) \
    xx(n,unk_105) \
    xx(n,unk_106) \
    xx(n,unk_107) \
    xx(n,unk_108) \
    xx(n,unk_109) \
    xx(n,unk_110) \
    xx(n,unk_111) \
    xx(n,unk_112) \
    xx(n,unk_113) \
    xx(n,unk_114) \
    xx(n,unk_115) \
    xx(n,unk_116) \
    xx(n,unk_117) \
    xx(n,unk_118) \
    xx(n,unk_119) \
    xx(n,unk_120) \
    xx(n,unk_121) \
    xx(n,unk_122) \
    xx(n,unk_123) \
    xx(n,unk_124) \
    xx(n,unk_125) \
    xx(n,unk_126) \
    xx(n,unk_127)

enum STOP_FLAG
{
    dbg_stp_flag_x(dbg_stp)
};

#define dbg_graphic_flag_x(n) \
    xx(n,unk_0) \
    xx(n,unk_1) \
    x(n,GRAPHIC_DEFERRED) \
    xx(n,unk_3) \
    xx(n,unk_4) \
    xx(n,unk_5) \
    xx(n,unk_6) \
    xx(n,unk_7) \
    xx(n,unk_8) \
    x(n,GRAPHIC_NO_DOF) \
    xx(n,unk_10) \
    xx(n,unk_11) \
    x(n,GRAPHIC_BLUR_OFF_SYSTEM) \
    x(n,GRAPHIC_BLUR_OFF_GAME) \
    xx(n,unk_14) \
    x(n,GRAPHIC_STOP_3D_DRAW) \
    x(n,GRAPHIC_SLOW_FILTER_PLAYER) \
    x(n,GRAPHIC_SLOW_FILTER_ENEMY) \
    x(n,GRAPHIC_NOUSE_REALTIME_TONEMAP) \
    x(n,GRAPHIC_NOUSE_FILTER_GRADATION) \
    x(n,GRAPHIC_MIP_MAX_ON) \
    x(n,GRAPHIC_SSSSS_MODE) \
    x(n,GRAPHIC_SHADOWCAST_ENTRY_CHECK) \
    xx(n,unk_23) \
    xx(n,unk_24) \
    xx(n,unk_25) \
    xx(n,unk_26) \
    xx(n,unk_27) \
    xx(n,unk_28) \
    xx(n,unk_29) \
    xx(n,unk_30) \
    xx(n,unk_31) \
    x(n,GRAPHIC_STP_CAM_VFCUL) \
    x(n,GRAPHIC_NO_SHW_CAST_CULL) \
    x(n,GRAPHIC_COMP_CUBE_UPDATE) \
    x(n,GRAPHIC_NO_CAM_ALPHA) \
    x(n,GRAPHIC_PREFOGCOLOR_UPDATE) \
    x(n,GRAPHIC_SHADER_INIT_OVER) \
    x(n,GRAPHIC_CAM_AUTO_FOCUS) \
    x(n,GRAPHIC_SSAO_VER2) \
    x(n,GRAPHIC_FOWARD_ON) \
    x(n,GRAPHIC_CRAA_ON) \
    x(n,GRAPHIC_FXAA_ON) \
    x(n,GRAPHIC_SMAA_ON) \
    x(n,GRAPHIC_SSAO_ON) \
    x(n,GRAPHIC_MIRROR_DRAW) \
    x(n,GRAPHIC_SHADOW_OFF) \
    x(n,GRAPHIC_RAIN_MODE) \
    x(n,GRAPHIC_COMP_CLEAR_BUFF) \
    x(n,GRAPHIC_SET_UI_RESOLVE_PREVFRAME) \
    x(n,GRAPHIC_STOP_RESOLVE_PREVFRAME) \
    x(n,GRAPHIC_DRAW_PREVFRAME) \
    x(n,GRAPHIC_UI_GAME_CAPTER) \
    x(n,GRAPHIC_COMP_CLEAR_GBUFFER) \
    x(n,GRAPHIC_RESOLVE_PREEFFTEXTURE) \
    xx(n,unk_55) \
    xx(n,unk_56) \
    xx(n,unk_57) \
    xx(n,unk_58) \
    xx(n,unk_59) \
    xx(n,unk_60) \
    xx(n,unk_61) \
    xx(n,unk_62) \
    xx(n,unk_63) \
    x(n,GRAPHIC_DRAW_MOVIE) \
    xx(n,unk_65) \
    xx(n,unk_66) \
    xx(n,unk_67) \
    xx(n,unk_68) \
    xx(n,unk_69) \
    xx(n,unk_70) \
    xx(n,unk_71) \
    xx(n,unk_72) \
    xx(n,unk_73) \
    xx(n,unk_74) \
    xx(n,unk_75) \
    xx(n,unk_76) \
    xx(n,unk_77) \
    xx(n,unk_78) \
    xx(n,unk_79) \
    x(n,GRAPHIC_COMPUTE_PARTICLE_NO_UPDATE) \
    x(n,GRAPHIC_COMPUTE_PARTICLE_NO_DRAW) \
    x(n,GRAPHIC_COMPUTE_PARTICLE_COLLISION) \
    x(n,GRAPHIC_COMPUTE_PARTICLE_VECTORFIELD) \
    x(n,GRAPHIC_COMPUTE_PARTICLE_NO_BITONICSORT) \
    x(n,GRAPHIC_COMPUTE_PARTICLE_NO_FIXEDSORT) \
    x(n,GRAPHIC_COMPUTE_PARTICLE_RADIXSORT) \
    xx(n,unk_87) \
    xx(n,unk_88) \
    xx(n,unk_89) \
    xx(n,unk_90) \
    xx(n,unk_91) \
    xx(n,unk_92) \
    xx(n,unk_93) \
    x(n,GRAPHIC_COMPUTE_ASYNC) \
    x(n,GRAPHIC_COMPUTE_PARTICLE_RADIXSORT_2) \
    xx(n,unk_96) \
    xx(n,unk_97) \
    xx(n,unk_98) \
    xx(n,unk_99) \
    xx(n,unk_100) \
    xx(n,unk_101) \
    xx(n,unk_102) \
    xx(n,unk_103) \
    xx(n,unk_104) \
    xx(n,unk_105) \
    xx(n,unk_106) \
    xx(n,unk_107) \
    xx(n,unk_108) \
    xx(n,unk_109) \
    xx(n,unk_110) \
    xx(n,unk_111) \
    xx(n,unk_112) \
    xx(n,unk_113) \
    xx(n,unk_114) \
    xx(n,unk_115) \
    xx(n,unk_116) \
    xx(n,unk_117) \
    xx(n,unk_118) \
    xx(n,unk_119) \
    xx(n,unk_120) \
    xx(n,unk_121) \
    xx(n,unk_122) \
    xx(n,unk_123) \
    xx(n,unk_124) \
    xx(n,unk_125) \
    xx(n,unk_126) \
    xx(n,unk_127)

enum GRAPHIC_FLAG
{
    dbg_graphic_flag_x(dbg_graphic)
};

#define dbg_disp_flag_x(n) \
    x(n,DISP_NO_OBJ) \
    x(n,DISP_NO_PL) \
    x(n,DISP_NO_EM) \
    x(n,DISP_NO_ETCOBJ) \
    x(n,DISP_NO_ESP) \
    x(n,DISP_NO_SCR) \
    x(n,DISP_NO_MOVIE) \
    x(n,DISP_NO_SEAMLESS_MAP) \
    xx(n,unk_8) \
    xx(n,unk_9) \
    xx(n,unk_10) \
    x(n,DISP_NO_WP) \
    x(n,DISP_NO_BMOBJ) \
    x(n,DISP_NO_BAOBJ) \
    x(n,DISP_NO_BHOBJ) \
    xx(n,unk_15) \
    xx(n,unk_16) \
    xx(n,unk_17) \
    xx(n,unk_18) \
    xx(n,unk_19) \
    xx(n,unk_20) \
    xx(n,unk_21) \
    xx(n,unk_22) \
    xx(n,unk_23) \
    xx(n,unk_24) \
    xx(n,unk_25) \
    xx(n,unk_26) \
    xx(n,unk_27) \
    xx(n,unk_28) \
    xx(n,unk_29) \
    xx(n,unk_30) \
    xx(n,unk_31) \
    xx(n,unk_32) \
    xx(n,unk_33) \
    xx(n,unk_34) \
    xx(n,unk_35) \
    xx(n,unk_36) \
    xx(n,unk_37) \
    xx(n,unk_38) \
    xx(n,unk_39) \
    xx(n,unk_40) \
    xx(n,unk_41) \
    xx(n,unk_42) \
    xx(n,unk_43) \
    xx(n,unk_44) \
    xx(n,unk_45) \
    xx(n,unk_46) \
    xx(n,unk_47) \
    xx(n,unk_48) \
    xx(n,unk_49) \
    xx(n,unk_50) \
    xx(n,unk_51) \
    xx(n,unk_52) \
    xx(n,unk_53) \
    xx(n,unk_54) \
    xx(n,unk_55) \
    xx(n,unk_56) \
    xx(n,unk_57) \
    xx(n,unk_58) \
    xx(n,unk_59) \
    xx(n,unk_60) \
    xx(n,unk_61) \
    xx(n,unk_62) \
    xx(n,unk_63) \
    xx(n,unk_64) \
    xx(n,unk_65) \
    xx(n,unk_66) \
    xx(n,unk_67) \
    xx(n,unk_68) \
    xx(n,unk_69) \
    xx(n,unk_70) \
    xx(n,unk_71) \
    xx(n,unk_72) \
    xx(n,unk_73) \
    xx(n,unk_74) \
    xx(n,unk_75) \
    xx(n,unk_76) \
    xx(n,unk_77) \
    xx(n,unk_78) \
    xx(n,unk_79) \
    xx(n,unk_80) \
    xx(n,unk_81) \
    xx(n,unk_82) \
    xx(n,unk_83) \
    xx(n,unk_84) \
    xx(n,unk_85) \
    xx(n,unk_86) \
    xx(n,unk_87) \
    xx(n,unk_88) \
    xx(n,unk_89) \
    xx(n,unk_90) \
    xx(n,unk_91) \
    xx(n,unk_92) \
    xx(n,unk_93) \
    xx(n,unk_94) \
    xx(n,unk_95) \
    xx(n,unk_96) \
    xx(n,unk_97) \
    xx(n,unk_98) \
    xx(n,unk_99) \
    xx(n,unk_100) \
    xx(n,unk_101) \
    xx(n,unk_102) \
    xx(n,unk_103) \
    xx(n,unk_104) \
    xx(n,unk_105) \
    xx(n,unk_106) \
    xx(n,unk_107) \
    xx(n,unk_108) \
    xx(n,unk_109) \
    xx(n,unk_110) \
    xx(n,unk_111) \
    xx(n,unk_112) \
    xx(n,unk_113) \
    xx(n,unk_114) \
    xx(n,unk_115) \
    xx(n,unk_116) \
    xx(n,unk_117) \
    xx(n,unk_118) \
    xx(n,unk_119) \
    xx(n,unk_120) \
    xx(n,unk_121) \
    xx(n,unk_122) \
    xx(n,unk_123) \
    xx(n,unk_124) \
    xx(n,unk_125) \
    xx(n,unk_126) \
    xx(n,unk_127)

enum DISP_FLAG
{
    dbg_disp_flag_x(dbg_disp)
};

#define dbg_game_flag_x(n) \
    x(n,GAME_CAMERA_UD_REVERSE) \
    x(n,GAME_CAMERA_RL_REVERSE) \
    xx(n,unk_2) \
    xx(n,unk_3) \
    xx(n,unk_4) \
    xx(n,unk_5) \
    x(n,GAME_PLAYER_2BA2) \
    x(n,GAME_PLAYER_9SA2) \
    x(n,GAME_STOP_PL_ATK_S) \
    x(n,GAME_STOP_PL_ATK_L) \
    x(n,GAME_STOP_PL_JUMP) \
    x(n,GAME_STOP_PL_GUN) \
    x(n,GAME_STOP_PL_SKILL_A) \
    x(n,GAME_STOP_PL_SKILL_B) \
    x(n,GAME_STOP_PL_ESCAPE) \
    x(n,GAME_STOP_PL_MOVE) \
    x(n,GAME_PLAYER_FUNNEL) \
    x(n,GAME_HACKING) \
    x(n,GAME_PLAYER_9S) \
    x(n,GAME_PLAYER_A2) \
    x(n,GAME_PLAYER_PASCAL) \
    x(n,GAME_2B_BRINK) \
    x(n,GAME_FREE_FLIGHT) \
    x(n,GAME_NPC_PASCAL) \
    x(n,GAME_PL_WALK_TALK_ONLY) \
    x(n,GAME_LOADING_LONG) \
    x(n,GAME_HACKING_HUMANOID) \
    x(n,GAME_CYBERSPACE_STOP) \
    x(n,GAME_CYBERSPACE_ATK_STOP) \
    x(n,GAME_FRIENDLY_FIRE_DISABLE) \
    x(n,GAME_CYBERSPACE_ATK_START) \
    x(n,GAME_LOADING_SHORT) \
    x(n,GAME_LOADING_HACKING) \
    x(n,GAME_ADAM_QUBE_STOP) \
    x(n,GAME_STAFFROLL) \
    x(n,GAME_ADAM_QUBE_MOVE) \
    x(n,GAME_SAVE_BAN) \
    x(n,GAME_DLC_UNMOUNT) \
    x(n,GAME_DLC_UNMOUNT_WAIT) \
    xx(n,unk_39) \
    xx(n,unk_40) \
    xx(n,unk_41) \
    xx(n,unk_42) \
    xx(n,unk_43) \
    xx(n,unk_44) \
    xx(n,unk_45) \
    xx(n,unk_46) \
    xx(n,unk_47) \
    xx(n,unk_48) \
    xx(n,unk_49) \
    xx(n,unk_50) \
    xx(n,unk_51) \
    xx(n,unk_52) \
    xx(n,unk_53) \
    xx(n,unk_54) \
    xx(n,unk_55) \
    xx(n,unk_56) \
    xx(n,unk_57) \
    xx(n,unk_58) \
    xx(n,unk_59) \
    xx(n,unk_60) \
    xx(n,unk_61) \
    xx(n,unk_62) \
    xx(n,unk_63)

enum GAME_FLAG
{
    dbg_game_flag_x(dbg_game)
};

#undef xe
#undef x
#undef xx
